{"version":3,"file":"tester.esm.js","sources":["../src/utils.js","../src/tester.js","../src/ConfigurationClass.js","../src/index.js"],"sourcesContent":["/*\n  Utilities\n*/\n\nfunction getInstance (component) {\n  const instance = component.instance();\n  return instance.wrappedInstance || instance;\n}\n\nfunction getValue (tester, value) {\n  return typeof value === 'function' ? value(tester) : value;\n}\n\nfunction sleep (ms = 0) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nfunction capitalize (string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport {\n  capitalize,\n  getInstance,\n  getValue,\n  sleep,\n};\n","import React, { Fragment } from 'react';\n\nimport {\n  getInstance,\n  getValue,\n  sleep,\n} from './utils';\n\nconst NullComponent = (props) => <Fragment {...props} />;\n\n\n/*\n  Name: Tester\n  Description: Testing utility class to mount a specific component with it's required wrappers.\n\n  Usage:\n    // Bootstrap Transport, localStorage + Session and an AppState.\n    const tester = new Tester(MyComponent);\n\n    // Bootstrap nothing, use with light components that doesn't need any of the above.\n    const tester = new TesterLight(MyComponent);\n\n    // Mount the component\n    await tester.mount();\n\n    // Test component that requires more JSX than the component only :\n    const new Tester(MyComponent, {mount: (<Form><MyComponent></Form>)});\n\n    // You can mount right away if no Transport or AppState modification is needed.\n    const tester = await new Tester(MyComponent).mount();\n\n    // opts.shallow is an experimental feature that allows you to test the TestedComponent instance behaviors.\n    // Please only use it when necessary.\n    const tester = await new Tester(MyComponent, { shallow: true }).mount();\n      tester.shallow.wrapper // equals to shallow(<TestedComponent {...this.props} {...this.AppState} />)\n      tester.shallow.instance // equals to tester.shallow.instance()\n*/\n\n/**\n * Testing utility class to mount a specific component with it's required wrappers.\n *\n * @param {ReactComponent} TestedComponent\n * @param {Object} options\n * @returns {Tester}\n */\nclass Tester {\n  config;\n  initialMount;\n  onBeforeMount;\n  opts;\n  profile;\n  props;\n  shallow;\n  TestedComponent;\n  wrapper;\n  wrappers;\n\n  constructor (TestedComponent, opts = {}) {\n    this.config = this.constructor.Configuration;\n    this.opts = opts;\n    this.initialMount = opts.mount;\n    this.onBeforeMount = opts.onBeforeMount;\n    this.profile = {...this.config.profiles.Default, ...opts.profile};\n    this.props = opts.props || {};\n    this.TestedComponent = TestedComponent;\n\n    // Allow testing without a main TestedComponent. This require an initialMount.\n    if (!this.TestedComponent && this.initialMount) {\n      this.TestedComponent = NullComponent;\n      this.initialMount = <this.TestedComponent>{this.initialMount}</this.TestedComponent>;\n    }\n\n    // Loop through hooks onInit(),\n    this.config.getValidHooks(this, 'onInit').forEach((hook) => {\n      hook.onInit(this);\n    });\n  }\n\n  getWrappers () {\n    const wrappers = [];\n\n    this.config.getValidHooks(this, 'component').forEach((hook) => {\n      wrappers.push({\n        component: hook.component,\n        name: hook.name,\n        props: getValue(this, hook.props),\n      });\n    });\n\n    return wrappers;\n  }\n\n  get instance () {\n    return getInstance(this.component);\n  }\n\n  get component () {\n    return this.wrapper.find(this.TestedComponent);\n  }\n\n  debug () {\n    // eslint-disable-next-line no-console\n    console.log(this.wrapper.debug());\n  }\n\n  html () {\n    return this.component.html();\n  }\n\n  text () {\n    return this.component.text();\n  }\n\n  find (selector) {\n    return this.wrapper.find(selector);\n  }\n\n  update () {\n    return this.wrapper.update();\n  }\n\n  async sleep (ms) {\n    await sleep(ms);\n  }\n\n  async refresh (ms) {\n    await sleep(ms);\n    this.update();\n  }\n\n  createShallowWrapper () {\n    this.shallow = {};\n    this.shallow.wrapper = this.config.enzyme.mount(<this.TestedComponent.wrappedComponent {...this.props} { ...this.AppState } />);\n    this.shallow.instance = getInstance(this.shallow.wrapper);\n  }\n\n  async mount (mountOpts = {}) {\n\n    // Loop through hooks onBeforeMount(),\n    // This MUST be a regular for () loop to not throw the promise away. (forEach won't work)\n    for (const hook of this.config.getValidHooks(this, 'onBeforeMount')) {\n      await hook.onBeforeMount(this, mountOpts);\n    }\n\n    // Allows you to fetch data to set as props, prepare extra stores, etc.\n    if (this.onBeforeMount) {\n      await this.onBeforeMount(this);\n    }\n\n    const initialMount = this.initialMount || <this.TestedComponent {...this.props} />;\n\n    const WrapperTree = this.getWrappers().reduce((Tree, wrapper) => {\n      const wrapperChildren = wrapper.renderChildren !== false && Tree;\n      if (wrapper.props) {\n        return <wrapper.component {...wrapper.props}>{wrapperChildren}</wrapper.component>;\n      }\n      return Tree;\n    }, initialMount);\n\n    this.wrapper = await this.config.enzyme.mount(WrapperTree);\n\n    if (this.opts.shallow) {\n      this.createShallowWrapper();\n    }\n\n    if (mountOpts.async) {\n      await this.sleep();\n      this.update();\n    }\n\n    return this;\n  }\n}\n\nexport default Tester;\n","import { capitalize } from './utils';\n\n/*\n  Tester Configuration Class\n*/\nclass ConfigurationClass {\n  enzyme;\n  hooks = {};\n  profiles = {\n    // Default profile, each of it's properties can be overwritten.\n    Default: {},\n  };\n  Tester;\n\n  constructor (Tester) {\n    this.Tester = Tester;\n    Tester.Configuration = this;\n  }\n\n  configure (enzyme, config) {\n    this.enzyme = enzyme;\n\n    if (config.hooks) {\n      config.hooks.forEach((hook) => {\n        this.registerHook(hook);\n      });\n    }\n\n    if (config.profiles) {\n      config.profiles.forEach((profile) => {\n        this.registerProfile(profile);\n      });\n    }\n\n    this.createShortcuts();\n\n    return this.Tester;\n  }\n\n  /*\n    Create shortcuts for each global profiles\n    Tester shortcuts allows you to use a specific global profile without having to pass it in in the options.\n\n    E.g.\n    Using a new Tester.Light(MyComponent) allows you to skip the initialization of Transport, localStorage + Session and AppState.\n  */\n  createShortcuts () {\n    Object.keys(this.profiles).forEach((profileKey) => {\n      this.Tester[profileKey] = (TestedComponent, opts = {}) => {\n        return new this.Tester(TestedComponent, {...opts, profile: this.profiles[profileKey]});\n      };\n    });\n  }\n\n  /*\n    Hooks,\n    {\n      name: string,\n      component: React.Component,\n      props: object || fn(), // fn() allows this.AppState to be set for e.g\n      onInit: fn(),\n      onBeforeMount: fn(),\n      shortCuts: {shortCutName: fn()},\n      wrapper: fn() => { Component: React.Component, name: string, props: object }\n    }\n\n    Note: Order is important!\n  */\n  registerHook (hook) {\n    if (!hook.name) { throw new Error('Tester.registerHook() : A hooks must have a name.'); }\n    if (this.hooks[hook.name]) { throw new Error(`Tester.registerHook() : A hook named \"${hook.name}\" already exist.`); }\n\n    // Validate hook properties here.\n\n    this.hooks[hook.name] = hook;\n  }\n\n  /*\n    Profiles,\n    {\n      // Profile keys must be hook names.\n    }\n  */\n  registerProfile (profile) {\n    if (!profile.name) { throw new Error('Tester.registerHook() : A hooks must have a name.'); }\n\n    const capitalizedName = capitalize(profile.name);\n\n    if (this.profiles[capitalizedName] && capitalizedName !== 'Default') {\n      throw new Error(`Tester.registerProfile() : A profile named \"${capitalizedName}\" already exist.`);\n    }\n\n    // Validate profile properties here.\n    //  - Does every key or the profile is a hook ?\n\n    this.profiles[capitalizedName] = profile;\n  }\n\n  getValidHooks (tester, hookProp) {\n    const hooks = [];\n\n    Object.values(this.hooks).forEach((hook) => {\n      let valid = true;\n      if (!tester.profile[hook.name]) { valid = false; }\n      if (hookProp && !hook[hookProp]) { valid = false; }\n\n      if (valid) {\n        hooks.push(hook);\n      }\n    });\n\n    return hooks;\n  }\n\n}\n\nexport default ConfigurationClass;\n","import Tester from './tester';\nimport ConfigurationClass from './ConfigurationClass';\n\nconst TesterConfig = new ConfigurationClass(Tester);\n\nexport {\n  Tester,\n  TesterConfig,\n}\n"],"names":["getInstance","component","instance","wrappedInstance","getValue","tester","value","sleep","ms","Promise","resolve","setTimeout","capitalize","string","charAt","toUpperCase","slice","NullComponent","props","Tester","TestedComponent","opts","config","constructor","Configuration","initialMount","mount","onBeforeMount","profile","profiles","Default","getValidHooks","forEach","hook","onInit","wrappers","push","name","console","log","wrapper","debug","html","text","selector","find","update","shallow","enzyme","AppState","mountOpts","WrapperTree","getWrappers","reduce","Tree","wrapperChildren","renderChildren","createShallowWrapper","async","ConfigurationClass","hooks","registerHook","registerProfile","createShortcuts","Object","keys","profileKey","Error","capitalizedName","hookProp","values","valid","TesterConfig"],"mappings":"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"}